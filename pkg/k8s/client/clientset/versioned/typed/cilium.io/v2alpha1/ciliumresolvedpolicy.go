// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Cilium

// Code generated by client-gen. DO NOT EDIT.

package v2alpha1

import (
	context "context"

	ciliumiov2alpha1 "github.com/cilium/cilium/pkg/k8s/apis/cilium.io/v2alpha1"
	scheme "github.com/cilium/cilium/pkg/k8s/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// CiliumResolvedPoliciesGetter has a method to return a CiliumResolvedPolicyInterface.
// A group's client should implement this interface.
type CiliumResolvedPoliciesGetter interface {
	CiliumResolvedPolicies(namespace string) CiliumResolvedPolicyInterface
}

// CiliumResolvedPolicyInterface has methods to work with CiliumResolvedPolicy resources.
type CiliumResolvedPolicyInterface interface {
	Create(ctx context.Context, ciliumResolvedPolicy *ciliumiov2alpha1.CiliumResolvedPolicy, opts v1.CreateOptions) (*ciliumiov2alpha1.CiliumResolvedPolicy, error)
	Update(ctx context.Context, ciliumResolvedPolicy *ciliumiov2alpha1.CiliumResolvedPolicy, opts v1.UpdateOptions) (*ciliumiov2alpha1.CiliumResolvedPolicy, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, ciliumResolvedPolicy *ciliumiov2alpha1.CiliumResolvedPolicy, opts v1.UpdateOptions) (*ciliumiov2alpha1.CiliumResolvedPolicy, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*ciliumiov2alpha1.CiliumResolvedPolicy, error)
	List(ctx context.Context, opts v1.ListOptions) (*ciliumiov2alpha1.CiliumResolvedPolicyList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *ciliumiov2alpha1.CiliumResolvedPolicy, err error)
	CiliumResolvedPolicyExpansion
}

// ciliumResolvedPolicies implements CiliumResolvedPolicyInterface
type ciliumResolvedPolicies struct {
	*gentype.ClientWithList[*ciliumiov2alpha1.CiliumResolvedPolicy, *ciliumiov2alpha1.CiliumResolvedPolicyList]
}

// newCiliumResolvedPolicies returns a CiliumResolvedPolicies
func newCiliumResolvedPolicies(c *CiliumV2alpha1Client, namespace string) *ciliumResolvedPolicies {
	return &ciliumResolvedPolicies{
		gentype.NewClientWithList[*ciliumiov2alpha1.CiliumResolvedPolicy, *ciliumiov2alpha1.CiliumResolvedPolicyList](
			"ciliumresolvedpolicies",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *ciliumiov2alpha1.CiliumResolvedPolicy { return &ciliumiov2alpha1.CiliumResolvedPolicy{} },
			func() *ciliumiov2alpha1.CiliumResolvedPolicyList { return &ciliumiov2alpha1.CiliumResolvedPolicyList{} },
		),
	}
}
