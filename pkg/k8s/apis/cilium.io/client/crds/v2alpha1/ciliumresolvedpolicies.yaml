---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: ciliumresolvedpolicies.cilium.io
spec:
  group: cilium.io
  names:
    categories:
    - cilium
    - ciliumresolved
    kind: CiliumResolvedPolicy
    listKind: CiliumResolvedPolicyList
    plural: ciliumresolvedpolicies
    shortNames:
    - crp
    singular: ciliumresolvedpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v2alpha1
    schema:
      openAPIV3Schema:
        description: |-
          CiliumResolvedPolicy is a Kubernetes third-party resource representing pre-computed policy
          with identity mappings for reduced computational overhead on Cilium agents.
          It is generated by a centralized controller that watches CNP, CCNP, and KNP resources,
          computes the policy rules and their affected identities, and distributes them to agents.
          This centralized approach significantly reduces resource overhead and API server load
          in large clusters by eliminating redundant policy computation across all agents.

          The CiliumResolvedPolicy is cluster-scoped and contains the pre-computed mapping between
          network policy rules and affected identities, allowing agents to efficiently apply
          the policies without having to perform the expensive identity resolution themselves.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the CiliumResolvedPolicy
            properties:
              egressDenyRuleIdentities:
                description: EgressDenyRuleIdentities is the list of egress deny rules
                  that were selected from the source policy.
                items:
                  description: |-
                    CRPPeerRule defines a component of an ingress or egress rule within a parsedCRP.
                    It associates a set of peer NumericIdentities with a specific L3/L4/L7 configuration.
                  properties:
                    icmps:
                      description: |-
                        ICMPs is a list of ICMP rule identified by type number
                        which the endpoint subject to the rule is allowed to
                        receive connections on.

                        Example:
                        Any endpoint with the label "app=httpd" can only accept incoming
                        type 8 ICMP connections.
                      items:
                        description: ICMPRule is a list of ICMP fields.
                        properties:
                          fields:
                            description: Fields is a list of ICMP fields.
                            items:
                              description: ICMPField is a ICMP field.
                              properties:
                                family:
                                  default: IPv4
                                  description: |-
                                    Family is a IP address version.
                                    Currently, we support `IPv4` and `IPv6`.
                                    `IPv4` is set as default.
                                  enum:
                                  - IPv4
                                  - IPv6
                                  type: string
                                type:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: "Type is a ICMP-type.\nIt should be
                                    an 8bit code (0-255), or it's CamelCase name (for
                                    example, \"EchoReply\").\nAllowed ICMP types are:\n
                                    \   Ipv4: EchoReply | DestinationUnreachable |
                                    Redirect | Echo | EchoRequest |\n\t\t     RouterAdvertisement
                                    | RouterSelection | TimeExceeded | ParameterProblem
                                    |\n\t\t\t Timestamp | TimestampReply | Photuris
                                    | ExtendedEcho Request | ExtendedEcho Reply\n
                                    \   Ipv6: DestinationUnreachable | PacketTooBig
                                    | TimeExceeded | ParameterProblem |\n\t\t\t EchoRequest
                                    | EchoReply | MulticastListenerQuery| MulticastListenerReport
                                    |\n\t\t\t MulticastListenerDone | RouterSolicitation
                                    | RouterAdvertisement | NeighborSolicitation |\n\t\t\t
                                    NeighborAdvertisement | RedirectMessage | RouterRenumbering
                                    | ICMPNodeInformationQuery |\n\t\t\t ICMPNodeInformationResponse
                                    | InverseNeighborDiscoverySolicitation | InverseNeighborDiscoveryAdvertisement
                                    |\n\t\t\t HomeAgentAddressDiscoveryRequest | HomeAgentAddressDiscoveryReply
                                    | MobilePrefixSolicitation |\n\t\t\t MobilePrefixAdvertisement
                                    | DuplicateAddressRequestCodeSuffix | DuplicateAddressConfirmationCodeSuffix
                                    |\n\t\t\t ExtendedEchoRequest | ExtendedEchoReply"
                                  pattern: ^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]|EchoReply|DestinationUnreachable|Redirect|Echo|RouterAdvertisement|RouterSelection|TimeExceeded|ParameterProblem|Timestamp|TimestampReply|Photuris|ExtendedEchoRequest|ExtendedEcho
                                    Reply|PacketTooBig|ParameterProblem|EchoRequest|MulticastListenerQuery|MulticastListenerReport|MulticastListenerDone|RouterSolicitation|RouterAdvertisement|NeighborSolicitation|NeighborAdvertisement|RedirectMessage|RouterRenumbering|ICMPNodeInformationQuery|ICMPNodeInformationResponse|InverseNeighborDiscoverySolicitation|InverseNeighborDiscoveryAdvertisement|HomeAgentAddressDiscoveryRequest|HomeAgentAddressDiscoveryReply|MobilePrefixSolicitation|MobilePrefixAdvertisement|DuplicateAddressRequestCodeSuffix|DuplicateAddressConfirmationCodeSuffix)$
                                  x-kubernetes-int-or-string: true
                              required:
                              - type
                              type: object
                            maxItems: 40
                            type: array
                        type: object
                      type: array
                    matchingPeerIdentities:
                      description: |-
                        MatchingPeerIdentities is a set of peer NumericIdentities that are allowed
                        (for ingress) or targeted (for egress) by this part of the rule,
                        sharing the same L3/L4/L7 configuration.
                      items:
                        description: "NumericIdentity is the numeric representation
                          of a security identity.\n\nBits:\n\n\t 0-15: identity identifier\n\t16-23:
                          cluster identifier\n\t   24: LocalIdentityFlag: Indicates
                          that the identity has a local scope"
                        format: int32
                        type: integer
                      type: array
                    toPorts:
                      description: |-
                        ToPorts is a list of destination ports identified by port number and
                        protocol which the endpoint subject to the rule is allowed to
                        receive connections on.
                      items:
                        description: |-
                          PortRule is a list of ports/protocol combinations with optional Layer 7
                          rules which must be met.
                        properties:
                          listener:
                            description: |-
                              listener specifies the name of a custom Envoy listener to which this traffic should be
                              redirected to.
                            properties:
                              envoyConfig:
                                description: |-
                                  EnvoyConfig is a reference to the CEC or CCEC resource in which
                                  the listener is defined.
                                properties:
                                  kind:
                                    description: |-
                                      Kind is the resource type being referred to. Defaults to CiliumEnvoyConfig or
                                      CiliumClusterwideEnvoyConfig for CiliumNetworkPolicy and CiliumClusterwideNetworkPolicy,
                                      respectively. The only case this is currently explicitly needed is when referring to a
                                      CiliumClusterwideEnvoyConfig from CiliumNetworkPolicy, as using a namespaced listener
                                      from a cluster scoped policy is not allowed.
                                    enum:
                                    - CiliumEnvoyConfig
                                    - CiliumClusterwideEnvoyConfig
                                    type: string
                                  name:
                                    description: |-
                                      Name is the resource name of the CiliumEnvoyConfig or CiliumClusterwideEnvoyConfig where
                                      the listener is defined in.
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                type: object
                              name:
                                description: Name is the name of the listener.
                                minLength: 1
                                type: string
                              priority:
                                description: |-
                                  Priority for this Listener that is used when multiple rules would apply different
                                  listeners to a policy map entry. Behavior of this is implementation dependent.
                                maximum: 100
                                minimum: 1
                                type: integer
                            required:
                            - envoyConfig
                            - name
                            type: object
                          originatingTLS:
                            description: |-
                              OriginatingTLS is the TLS context for the connections originated by
                              the L7 proxy.  For egress policy this specifies the client-side TLS
                              parameters for the upstream connection originating from the L7 proxy
                              to the remote destination. For ingress policy this specifies the
                              client-side TLS parameters for the connection from the L7 proxy to
                              the local endpoint.
                            properties:
                              certificate:
                                description: |-
                                  Certificate is the file name or k8s secret item name for the certificate
                                  chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the
                                  item must exist.
                                type: string
                              privateKey:
                                description: |-
                                  PrivateKey is the file name or k8s secret item name for the private key
                                  matching the certificate chain. If omitted, 'tls.key' is assumed, if it
                                  exists. If given, the item must exist.
                                type: string
                              secret:
                                description: |-
                                  Secret is the secret that contains the certificates and private key for
                                  the TLS context.
                                  By default, Cilium will search in this secret for the following items:
                                   - 'ca.crt'  - Which represents the trusted CA to verify remote source.
                                   - 'tls.crt' - Which represents the public key certificate.
                                   - 'tls.key' - Which represents the private key matching the public key
                                                 certificate.
                                properties:
                                  name:
                                    description: Name is the name of the secret.
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace in which the secret exists. Context of use
                                      determines the default value if left out (e.g., "default").
                                    type: string
                                required:
                                - name
                                type: object
                              trustedCA:
                                description: |-
                                  TrustedCA is the file name or k8s secret item name for the trusted CA.
                                  If omitted, 'ca.crt' is assumed, if it exists. If given, the item must
                                  exist.
                                type: string
                            required:
                            - secret
                            type: object
                          ports:
                            description: Ports is a list of L4 port/protocol
                            items:
                              description: PortProtocol specifies an L4 port with
                                an optional transport protocol
                              properties:
                                endPort:
                                  description: EndPort can only be an L4 port number.
                                  format: int32
                                  maximum: 65535
                                  minimum: 0
                                  type: integer
                                port:
                                  description: |-
                                    Port can be an L4 port number, or a name in the form of "http"
                                    or "http-8080".
                                  pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                  type: string
                                protocol:
                                  description: |-
                                    Protocol is the L4 protocol. If omitted or empty, any protocol
                                    matches. Accepted values: "TCP", "UDP", "SCTP", "ANY"

                                    Matching on ICMP is not supported.

                                    Named port specified for a container may narrow this down, but may not
                                    contradict this.
                                  enum:
                                  - TCP
                                  - UDP
                                  - SCTP
                                  - ANY
                                  type: string
                              required:
                              - port
                              type: object
                            maxItems: 40
                            type: array
                          rules:
                            description: |-
                              Rules is a list of additional port level rules which must be met in
                              order for the PortRule to allow the traffic. If omitted or empty,
                              no layer 7 rules are enforced.
                            oneOf:
                            - properties:
                                http: {}
                              required:
                              - http
                            - properties:
                                kafka: {}
                              required:
                              - kafka
                            - properties:
                                dns: {}
                              required:
                              - dns
                            - properties:
                                l7proto: {}
                              required:
                              - l7proto
                            properties:
                              dns:
                                description: DNS-specific rules.
                                items:
                                  description: PortRuleDNS is a list of allowed DNS
                                    lookups.
                                  oneOf:
                                  - properties:
                                      matchName: {}
                                    required:
                                    - matchName
                                  - properties:
                                      matchPattern: {}
                                    required:
                                    - matchPattern
                                  properties:
                                    matchName:
                                      description: |-
                                        MatchName matches literal DNS names. A trailing "." is automatically added
                                        when missing.
                                      maxLength: 255
                                      pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                      type: string
                                    matchPattern:
                                      description: |-
                                        MatchPattern allows using wildcards to match DNS names. All wildcards are
                                        case insensitive. The wildcards are:
                                        - "*" matches 0 or more DNS valid characters, and may occur anywhere in
                                        the pattern. As a special case a "*" as the leftmost character, without a
                                        following "." matches all subdomains as well as the name to the right.
                                        A trailing "." is automatically added when missing.

                                        Examples:
                                        `*.cilium.io` matches subdomains of cilium at that level
                                          www.cilium.io and blog.cilium.io match, cilium.io and google.com do not
                                        `*cilium.io` matches cilium.io and all subdomains ends with "cilium.io"
                                          except those containing "." separator, subcilium.io and sub-cilium.io match,
                                          www.cilium.io and blog.cilium.io does not
                                        sub*.cilium.io matches subdomains of cilium where the subdomain component
                                        begins with "sub"
                                          sub.cilium.io and subdomain.cilium.io match, www.cilium.io,
                                          blog.cilium.io, cilium.io and google.com do not
                                      maxLength: 255
                                      pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                      type: string
                                  type: object
                                type: array
                              http:
                                description: HTTP specific rules.
                                items:
                                  description: |-
                                    PortRuleHTTP is a list of HTTP protocol constraints. All fields are
                                    optional, if all fields are empty or missing, the rule does not have any
                                    effect.

                                    All fields of this type are extended POSIX regex as defined by IEEE Std
                                    1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax)
                                    matched against the path of an incoming request. Currently it can contain
                                    characters disallowed from the conventional "path" part of a URL as defined
                                    by RFC 3986.
                                  properties:
                                    headerMatches:
                                      description: |-
                                        HeaderMatches is a list of HTTP headers which must be
                                        present and match against the given values. Mismatch field can be used
                                        to specify what to do when there is no match.
                                      items:
                                        description: |-
                                          HeaderMatch extends the HeaderValue for matching requirement of a
                                          named header field against an immediate string or a secret value.
                                          If none of the optional fields is present, then the
                                          header value is not matched, only presence of the header is enough.
                                        properties:
                                          mismatch:
                                            description: |-
                                              Mismatch identifies what to do in case there is no match. The default is
                                              to drop the request. Otherwise the overall rule is still considered as
                                              matching, but the mismatches are logged in the access log.
                                            enum:
                                            - LOG
                                            - ADD
                                            - DELETE
                                            - REPLACE
                                            type: string
                                          name:
                                            description: Name identifies the header.
                                            minLength: 1
                                            type: string
                                          secret:
                                            description: |-
                                              Secret refers to a secret that contains the value to be matched against.
                                              The secret must only contain one entry. If the referred secret does not
                                              exist, and there is no "Value" specified, the match will fail.
                                            properties:
                                              name:
                                                description: Name is the name of the
                                                  secret.
                                                type: string
                                              namespace:
                                                description: |-
                                                  Namespace is the namespace in which the secret exists. Context of use
                                                  determines the default value if left out (e.g., "default").
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          value:
                                            description: |-
                                              Value matches the exact value of the header. Can be specified either
                                              alone or together with "Secret"; will be used as the header value if the
                                              secret can not be found in the latter case.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    headers:
                                      description: |-
                                        Headers is a list of HTTP headers which must be present in the
                                        request. If omitted or empty, requests are allowed regardless of
                                        headers present.
                                      items:
                                        type: string
                                      type: array
                                    host:
                                      description: |-
                                        Host is an extended POSIX regex matched against the host header of a
                                        request. Examples:

                                        - foo.bar.com will match the host fooXbar.com or foo-bar.com
                                        - foo\.bar\.com will only match the host foo.bar.com

                                        If omitted or empty, the value of the host header is ignored.
                                      format: idn-hostname
                                      type: string
                                    method:
                                      description: |-
                                        Method is an extended POSIX regex matched against the method of a
                                        request, e.g. "GET", "POST", "PUT", "PATCH", "DELETE", ...

                                        If omitted or empty, all methods are allowed.
                                      type: string
                                    path:
                                      description: |-
                                        Path is an extended POSIX regex matched against the path of a
                                        request. Currently it can contain characters disallowed from the
                                        conventional "path" part of a URL as defined by RFC 3986.

                                        If omitted or empty, all paths are all allowed.
                                      type: string
                                  type: object
                                type: array
                              kafka:
                                description: Kafka-specific rules.
                                items:
                                  description: |-
                                    PortRule is a list of Kafka protocol constraints. All fields are
                                    optional, if all fields are empty or missing, the rule will match all
                                    Kafka messages.
                                  properties:
                                    apiKey:
                                      description: |-
                                        APIKey is a case-insensitive string matched against the key of a
                                        request, e.g. "produce", "fetch", "createtopic", "deletetopic", et al
                                        Reference: https://kafka.apache.org/protocol#protocol_api_keys

                                        If omitted or empty, and if Role is not specified, then all keys are allowed.
                                      type: string
                                    apiVersion:
                                      description: |-
                                        APIVersion is the version matched against the api version of the
                                        Kafka message. If set, it has to be a string representing a positive
                                        integer.

                                        If omitted or empty, all versions are allowed.
                                      type: string
                                    clientID:
                                      description: |-
                                        ClientID is the client identifier as provided in the request.

                                        From Kafka protocol documentation:
                                        This is a user supplied identifier for the client application. The
                                        user can use any identifier they like and it will be used when
                                        logging errors, monitoring aggregates, etc. For example, one might
                                        want to monitor not just the requests per second overall, but the
                                        number coming from each client application (each of which could
                                        reside on multiple servers). This id acts as a logical grouping
                                        across all requests from a particular client.

                                        If omitted or empty, all client identifiers are allowed.
                                      type: string
                                    role:
                                      description: |-
                                        Role is a case-insensitive string and describes a group of API keys
                                        necessary to perform certain higher-level Kafka operations such as "produce"
                                        or "consume". A Role automatically expands into all APIKeys required
                                        to perform the specified higher-level operation.

                                        The following values are supported:
                                         - "produce": Allow producing to the topics specified in the rule
                                         - "consume": Allow consuming from the topics specified in the rule

                                        This field is incompatible with the APIKey field, i.e APIKey and Role
                                        cannot both be specified in the same rule.

                                        If omitted or empty, and if APIKey is not specified, then all keys are
                                        allowed.
                                      enum:
                                      - produce
                                      - consume
                                      type: string
                                    topic:
                                      description: |-
                                        Topic is the topic name contained in the message. If a Kafka request
                                        contains multiple topics, then all topics must be allowed or the
                                        message will be rejected.

                                        This constraint is ignored if the matched request message type
                                        doesn't contain any topic. Maximum size of Topic can be 249
                                        characters as per recent Kafka spec and allowed characters are
                                        a-z, A-Z, 0-9, -, . and _.

                                        Older Kafka versions had longer topic lengths of 255, but in Kafka 0.10
                                        version the length was changed from 255 to 249. For compatibility
                                        reasons we are using 255.

                                        If omitted or empty, all topics are allowed.
                                      maxLength: 255
                                      type: string
                                  type: object
                                type: array
                              l7:
                                description: Key-value pair rules.
                                items:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    PortRuleL7 is a list of key-value pairs interpreted by a L7 protocol as
                                    protocol constraints. All fields are optional, if all fields are empty or
                                    missing, the rule does not have any effect.
                                  type: object
                                type: array
                              l7proto:
                                description: Name of the L7 protocol for which the
                                  Key-value pair rules apply.
                                type: string
                            type: object
                          serverNames:
                            description: |-
                              ServerNames is a list of allowed TLS SNI values. If not empty, then
                              TLS must be present and one of the provided SNIs must be indicated in the
                              TLS handshake.
                            items:
                              description: |-
                                ServerName allows using prefix only wildcards to match DNS names.

                                - "*" matches 0 or more DNS valid characters, and may only occur at the
                                beginning of the pattern. As a special case a "*" as the leftmost character,
                                without a following "." matches all subdomains as well as the name to the right.

                                Examples:
                                  - `*.cilium.io` matches exactly one subdomain of cilium at that level www.cilium.io and blog.cilium.io match, cilium.io and google.com do not.
                                  - `**.cilium.io` matches more than one subdomain of cilium, e.g. sub1.sub2.cilium.io and sub.cilium.io match, cilium.io do not.
                              maxLength: 255
                              pattern: ^(\*?\*\.)?([-a-zA-Z0-9_]+\.?)+$
                              type: string
                            minItems: 1
                            type: array
                            x-kubernetes-list-type: set
                          terminatingTLS:
                            description: |-
                              TerminatingTLS is the TLS context for the connection terminated by
                              the L7 proxy.  For egress policy this specifies the server-side TLS
                              parameters to be applied on the connections originated from the local
                              endpoint and terminated by the L7 proxy. For ingress policy this specifies
                              the server-side TLS parameters to be applied on the connections
                              originated from a remote source and terminated by the L7 proxy.
                            properties:
                              certificate:
                                description: |-
                                  Certificate is the file name or k8s secret item name for the certificate
                                  chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the
                                  item must exist.
                                type: string
                              privateKey:
                                description: |-
                                  PrivateKey is the file name or k8s secret item name for the private key
                                  matching the certificate chain. If omitted, 'tls.key' is assumed, if it
                                  exists. If given, the item must exist.
                                type: string
                              secret:
                                description: |-
                                  Secret is the secret that contains the certificates and private key for
                                  the TLS context.
                                  By default, Cilium will search in this secret for the following items:
                                   - 'ca.crt'  - Which represents the trusted CA to verify remote source.
                                   - 'tls.crt' - Which represents the public key certificate.
                                   - 'tls.key' - Which represents the private key matching the public key
                                                 certificate.
                                properties:
                                  name:
                                    description: Name is the name of the secret.
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace in which the secret exists. Context of use
                                      determines the default value if left out (e.g., "default").
                                    type: string
                                required:
                                - name
                                type: object
                              trustedCA:
                                description: |-
                                  TrustedCA is the file name or k8s secret item name for the trusted CA.
                                  If omitted, 'ca.crt' is assumed, if it exists. If given, the item must
                                  exist.
                                type: string
                            required:
                            - secret
                            type: object
                        type: object
                      type: array
                  required:
                  - matchingPeerIdentities
                  type: object
                type: array
              egressRuleIdentities:
                description: |-
                  Egress rule identites is the list of egress rules that were selected from the source policy.
                  It can be empty if no egress rules were selected.
                items:
                  description: |-
                    CRPPeerRule defines a component of an ingress or egress rule within a parsedCRP.
                    It associates a set of peer NumericIdentities with a specific L3/L4/L7 configuration.
                  properties:
                    icmps:
                      description: |-
                        ICMPs is a list of ICMP rule identified by type number
                        which the endpoint subject to the rule is allowed to
                        receive connections on.

                        Example:
                        Any endpoint with the label "app=httpd" can only accept incoming
                        type 8 ICMP connections.
                      items:
                        description: ICMPRule is a list of ICMP fields.
                        properties:
                          fields:
                            description: Fields is a list of ICMP fields.
                            items:
                              description: ICMPField is a ICMP field.
                              properties:
                                family:
                                  default: IPv4
                                  description: |-
                                    Family is a IP address version.
                                    Currently, we support `IPv4` and `IPv6`.
                                    `IPv4` is set as default.
                                  enum:
                                  - IPv4
                                  - IPv6
                                  type: string
                                type:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: "Type is a ICMP-type.\nIt should be
                                    an 8bit code (0-255), or it's CamelCase name (for
                                    example, \"EchoReply\").\nAllowed ICMP types are:\n
                                    \   Ipv4: EchoReply | DestinationUnreachable |
                                    Redirect | Echo | EchoRequest |\n\t\t     RouterAdvertisement
                                    | RouterSelection | TimeExceeded | ParameterProblem
                                    |\n\t\t\t Timestamp | TimestampReply | Photuris
                                    | ExtendedEcho Request | ExtendedEcho Reply\n
                                    \   Ipv6: DestinationUnreachable | PacketTooBig
                                    | TimeExceeded | ParameterProblem |\n\t\t\t EchoRequest
                                    | EchoReply | MulticastListenerQuery| MulticastListenerReport
                                    |\n\t\t\t MulticastListenerDone | RouterSolicitation
                                    | RouterAdvertisement | NeighborSolicitation |\n\t\t\t
                                    NeighborAdvertisement | RedirectMessage | RouterRenumbering
                                    | ICMPNodeInformationQuery |\n\t\t\t ICMPNodeInformationResponse
                                    | InverseNeighborDiscoverySolicitation | InverseNeighborDiscoveryAdvertisement
                                    |\n\t\t\t HomeAgentAddressDiscoveryRequest | HomeAgentAddressDiscoveryReply
                                    | MobilePrefixSolicitation |\n\t\t\t MobilePrefixAdvertisement
                                    | DuplicateAddressRequestCodeSuffix | DuplicateAddressConfirmationCodeSuffix
                                    |\n\t\t\t ExtendedEchoRequest | ExtendedEchoReply"
                                  pattern: ^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]|EchoReply|DestinationUnreachable|Redirect|Echo|RouterAdvertisement|RouterSelection|TimeExceeded|ParameterProblem|Timestamp|TimestampReply|Photuris|ExtendedEchoRequest|ExtendedEcho
                                    Reply|PacketTooBig|ParameterProblem|EchoRequest|MulticastListenerQuery|MulticastListenerReport|MulticastListenerDone|RouterSolicitation|RouterAdvertisement|NeighborSolicitation|NeighborAdvertisement|RedirectMessage|RouterRenumbering|ICMPNodeInformationQuery|ICMPNodeInformationResponse|InverseNeighborDiscoverySolicitation|InverseNeighborDiscoveryAdvertisement|HomeAgentAddressDiscoveryRequest|HomeAgentAddressDiscoveryReply|MobilePrefixSolicitation|MobilePrefixAdvertisement|DuplicateAddressRequestCodeSuffix|DuplicateAddressConfirmationCodeSuffix)$
                                  x-kubernetes-int-or-string: true
                              required:
                              - type
                              type: object
                            maxItems: 40
                            type: array
                        type: object
                      type: array
                    matchingPeerIdentities:
                      description: |-
                        MatchingPeerIdentities is a set of peer NumericIdentities that are allowed
                        (for ingress) or targeted (for egress) by this part of the rule,
                        sharing the same L3/L4/L7 configuration.
                      items:
                        description: "NumericIdentity is the numeric representation
                          of a security identity.\n\nBits:\n\n\t 0-15: identity identifier\n\t16-23:
                          cluster identifier\n\t   24: LocalIdentityFlag: Indicates
                          that the identity has a local scope"
                        format: int32
                        type: integer
                      type: array
                    toPorts:
                      description: |-
                        ToPorts is a list of destination ports identified by port number and
                        protocol which the endpoint subject to the rule is allowed to
                        receive connections on.
                      items:
                        description: |-
                          PortRule is a list of ports/protocol combinations with optional Layer 7
                          rules which must be met.
                        properties:
                          listener:
                            description: |-
                              listener specifies the name of a custom Envoy listener to which this traffic should be
                              redirected to.
                            properties:
                              envoyConfig:
                                description: |-
                                  EnvoyConfig is a reference to the CEC or CCEC resource in which
                                  the listener is defined.
                                properties:
                                  kind:
                                    description: |-
                                      Kind is the resource type being referred to. Defaults to CiliumEnvoyConfig or
                                      CiliumClusterwideEnvoyConfig for CiliumNetworkPolicy and CiliumClusterwideNetworkPolicy,
                                      respectively. The only case this is currently explicitly needed is when referring to a
                                      CiliumClusterwideEnvoyConfig from CiliumNetworkPolicy, as using a namespaced listener
                                      from a cluster scoped policy is not allowed.
                                    enum:
                                    - CiliumEnvoyConfig
                                    - CiliumClusterwideEnvoyConfig
                                    type: string
                                  name:
                                    description: |-
                                      Name is the resource name of the CiliumEnvoyConfig or CiliumClusterwideEnvoyConfig where
                                      the listener is defined in.
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                type: object
                              name:
                                description: Name is the name of the listener.
                                minLength: 1
                                type: string
                              priority:
                                description: |-
                                  Priority for this Listener that is used when multiple rules would apply different
                                  listeners to a policy map entry. Behavior of this is implementation dependent.
                                maximum: 100
                                minimum: 1
                                type: integer
                            required:
                            - envoyConfig
                            - name
                            type: object
                          originatingTLS:
                            description: |-
                              OriginatingTLS is the TLS context for the connections originated by
                              the L7 proxy.  For egress policy this specifies the client-side TLS
                              parameters for the upstream connection originating from the L7 proxy
                              to the remote destination. For ingress policy this specifies the
                              client-side TLS parameters for the connection from the L7 proxy to
                              the local endpoint.
                            properties:
                              certificate:
                                description: |-
                                  Certificate is the file name or k8s secret item name for the certificate
                                  chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the
                                  item must exist.
                                type: string
                              privateKey:
                                description: |-
                                  PrivateKey is the file name or k8s secret item name for the private key
                                  matching the certificate chain. If omitted, 'tls.key' is assumed, if it
                                  exists. If given, the item must exist.
                                type: string
                              secret:
                                description: |-
                                  Secret is the secret that contains the certificates and private key for
                                  the TLS context.
                                  By default, Cilium will search in this secret for the following items:
                                   - 'ca.crt'  - Which represents the trusted CA to verify remote source.
                                   - 'tls.crt' - Which represents the public key certificate.
                                   - 'tls.key' - Which represents the private key matching the public key
                                                 certificate.
                                properties:
                                  name:
                                    description: Name is the name of the secret.
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace in which the secret exists. Context of use
                                      determines the default value if left out (e.g., "default").
                                    type: string
                                required:
                                - name
                                type: object
                              trustedCA:
                                description: |-
                                  TrustedCA is the file name or k8s secret item name for the trusted CA.
                                  If omitted, 'ca.crt' is assumed, if it exists. If given, the item must
                                  exist.
                                type: string
                            required:
                            - secret
                            type: object
                          ports:
                            description: Ports is a list of L4 port/protocol
                            items:
                              description: PortProtocol specifies an L4 port with
                                an optional transport protocol
                              properties:
                                endPort:
                                  description: EndPort can only be an L4 port number.
                                  format: int32
                                  maximum: 65535
                                  minimum: 0
                                  type: integer
                                port:
                                  description: |-
                                    Port can be an L4 port number, or a name in the form of "http"
                                    or "http-8080".
                                  pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                  type: string
                                protocol:
                                  description: |-
                                    Protocol is the L4 protocol. If omitted or empty, any protocol
                                    matches. Accepted values: "TCP", "UDP", "SCTP", "ANY"

                                    Matching on ICMP is not supported.

                                    Named port specified for a container may narrow this down, but may not
                                    contradict this.
                                  enum:
                                  - TCP
                                  - UDP
                                  - SCTP
                                  - ANY
                                  type: string
                              required:
                              - port
                              type: object
                            maxItems: 40
                            type: array
                          rules:
                            description: |-
                              Rules is a list of additional port level rules which must be met in
                              order for the PortRule to allow the traffic. If omitted or empty,
                              no layer 7 rules are enforced.
                            oneOf:
                            - properties:
                                http: {}
                              required:
                              - http
                            - properties:
                                kafka: {}
                              required:
                              - kafka
                            - properties:
                                dns: {}
                              required:
                              - dns
                            - properties:
                                l7proto: {}
                              required:
                              - l7proto
                            properties:
                              dns:
                                description: DNS-specific rules.
                                items:
                                  description: PortRuleDNS is a list of allowed DNS
                                    lookups.
                                  oneOf:
                                  - properties:
                                      matchName: {}
                                    required:
                                    - matchName
                                  - properties:
                                      matchPattern: {}
                                    required:
                                    - matchPattern
                                  properties:
                                    matchName:
                                      description: |-
                                        MatchName matches literal DNS names. A trailing "." is automatically added
                                        when missing.
                                      maxLength: 255
                                      pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                      type: string
                                    matchPattern:
                                      description: |-
                                        MatchPattern allows using wildcards to match DNS names. All wildcards are
                                        case insensitive. The wildcards are:
                                        - "*" matches 0 or more DNS valid characters, and may occur anywhere in
                                        the pattern. As a special case a "*" as the leftmost character, without a
                                        following "." matches all subdomains as well as the name to the right.
                                        A trailing "." is automatically added when missing.

                                        Examples:
                                        `*.cilium.io` matches subdomains of cilium at that level
                                          www.cilium.io and blog.cilium.io match, cilium.io and google.com do not
                                        `*cilium.io` matches cilium.io and all subdomains ends with "cilium.io"
                                          except those containing "." separator, subcilium.io and sub-cilium.io match,
                                          www.cilium.io and blog.cilium.io does not
                                        sub*.cilium.io matches subdomains of cilium where the subdomain component
                                        begins with "sub"
                                          sub.cilium.io and subdomain.cilium.io match, www.cilium.io,
                                          blog.cilium.io, cilium.io and google.com do not
                                      maxLength: 255
                                      pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                      type: string
                                  type: object
                                type: array
                              http:
                                description: HTTP specific rules.
                                items:
                                  description: |-
                                    PortRuleHTTP is a list of HTTP protocol constraints. All fields are
                                    optional, if all fields are empty or missing, the rule does not have any
                                    effect.

                                    All fields of this type are extended POSIX regex as defined by IEEE Std
                                    1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax)
                                    matched against the path of an incoming request. Currently it can contain
                                    characters disallowed from the conventional "path" part of a URL as defined
                                    by RFC 3986.
                                  properties:
                                    headerMatches:
                                      description: |-
                                        HeaderMatches is a list of HTTP headers which must be
                                        present and match against the given values. Mismatch field can be used
                                        to specify what to do when there is no match.
                                      items:
                                        description: |-
                                          HeaderMatch extends the HeaderValue for matching requirement of a
                                          named header field against an immediate string or a secret value.
                                          If none of the optional fields is present, then the
                                          header value is not matched, only presence of the header is enough.
                                        properties:
                                          mismatch:
                                            description: |-
                                              Mismatch identifies what to do in case there is no match. The default is
                                              to drop the request. Otherwise the overall rule is still considered as
                                              matching, but the mismatches are logged in the access log.
                                            enum:
                                            - LOG
                                            - ADD
                                            - DELETE
                                            - REPLACE
                                            type: string
                                          name:
                                            description: Name identifies the header.
                                            minLength: 1
                                            type: string
                                          secret:
                                            description: |-
                                              Secret refers to a secret that contains the value to be matched against.
                                              The secret must only contain one entry. If the referred secret does not
                                              exist, and there is no "Value" specified, the match will fail.
                                            properties:
                                              name:
                                                description: Name is the name of the
                                                  secret.
                                                type: string
                                              namespace:
                                                description: |-
                                                  Namespace is the namespace in which the secret exists. Context of use
                                                  determines the default value if left out (e.g., "default").
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          value:
                                            description: |-
                                              Value matches the exact value of the header. Can be specified either
                                              alone or together with "Secret"; will be used as the header value if the
                                              secret can not be found in the latter case.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    headers:
                                      description: |-
                                        Headers is a list of HTTP headers which must be present in the
                                        request. If omitted or empty, requests are allowed regardless of
                                        headers present.
                                      items:
                                        type: string
                                      type: array
                                    host:
                                      description: |-
                                        Host is an extended POSIX regex matched against the host header of a
                                        request. Examples:

                                        - foo.bar.com will match the host fooXbar.com or foo-bar.com
                                        - foo\.bar\.com will only match the host foo.bar.com

                                        If omitted or empty, the value of the host header is ignored.
                                      format: idn-hostname
                                      type: string
                                    method:
                                      description: |-
                                        Method is an extended POSIX regex matched against the method of a
                                        request, e.g. "GET", "POST", "PUT", "PATCH", "DELETE", ...

                                        If omitted or empty, all methods are allowed.
                                      type: string
                                    path:
                                      description: |-
                                        Path is an extended POSIX regex matched against the path of a
                                        request. Currently it can contain characters disallowed from the
                                        conventional "path" part of a URL as defined by RFC 3986.

                                        If omitted or empty, all paths are all allowed.
                                      type: string
                                  type: object
                                type: array
                              kafka:
                                description: Kafka-specific rules.
                                items:
                                  description: |-
                                    PortRule is a list of Kafka protocol constraints. All fields are
                                    optional, if all fields are empty or missing, the rule will match all
                                    Kafka messages.
                                  properties:
                                    apiKey:
                                      description: |-
                                        APIKey is a case-insensitive string matched against the key of a
                                        request, e.g. "produce", "fetch", "createtopic", "deletetopic", et al
                                        Reference: https://kafka.apache.org/protocol#protocol_api_keys

                                        If omitted or empty, and if Role is not specified, then all keys are allowed.
                                      type: string
                                    apiVersion:
                                      description: |-
                                        APIVersion is the version matched against the api version of the
                                        Kafka message. If set, it has to be a string representing a positive
                                        integer.

                                        If omitted or empty, all versions are allowed.
                                      type: string
                                    clientID:
                                      description: |-
                                        ClientID is the client identifier as provided in the request.

                                        From Kafka protocol documentation:
                                        This is a user supplied identifier for the client application. The
                                        user can use any identifier they like and it will be used when
                                        logging errors, monitoring aggregates, etc. For example, one might
                                        want to monitor not just the requests per second overall, but the
                                        number coming from each client application (each of which could
                                        reside on multiple servers). This id acts as a logical grouping
                                        across all requests from a particular client.

                                        If omitted or empty, all client identifiers are allowed.
                                      type: string
                                    role:
                                      description: |-
                                        Role is a case-insensitive string and describes a group of API keys
                                        necessary to perform certain higher-level Kafka operations such as "produce"
                                        or "consume". A Role automatically expands into all APIKeys required
                                        to perform the specified higher-level operation.

                                        The following values are supported:
                                         - "produce": Allow producing to the topics specified in the rule
                                         - "consume": Allow consuming from the topics specified in the rule

                                        This field is incompatible with the APIKey field, i.e APIKey and Role
                                        cannot both be specified in the same rule.

                                        If omitted or empty, and if APIKey is not specified, then all keys are
                                        allowed.
                                      enum:
                                      - produce
                                      - consume
                                      type: string
                                    topic:
                                      description: |-
                                        Topic is the topic name contained in the message. If a Kafka request
                                        contains multiple topics, then all topics must be allowed or the
                                        message will be rejected.

                                        This constraint is ignored if the matched request message type
                                        doesn't contain any topic. Maximum size of Topic can be 249
                                        characters as per recent Kafka spec and allowed characters are
                                        a-z, A-Z, 0-9, -, . and _.

                                        Older Kafka versions had longer topic lengths of 255, but in Kafka 0.10
                                        version the length was changed from 255 to 249. For compatibility
                                        reasons we are using 255.

                                        If omitted or empty, all topics are allowed.
                                      maxLength: 255
                                      type: string
                                  type: object
                                type: array
                              l7:
                                description: Key-value pair rules.
                                items:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    PortRuleL7 is a list of key-value pairs interpreted by a L7 protocol as
                                    protocol constraints. All fields are optional, if all fields are empty or
                                    missing, the rule does not have any effect.
                                  type: object
                                type: array
                              l7proto:
                                description: Name of the L7 protocol for which the
                                  Key-value pair rules apply.
                                type: string
                            type: object
                          serverNames:
                            description: |-
                              ServerNames is a list of allowed TLS SNI values. If not empty, then
                              TLS must be present and one of the provided SNIs must be indicated in the
                              TLS handshake.
                            items:
                              description: |-
                                ServerName allows using prefix only wildcards to match DNS names.

                                - "*" matches 0 or more DNS valid characters, and may only occur at the
                                beginning of the pattern. As a special case a "*" as the leftmost character,
                                without a following "." matches all subdomains as well as the name to the right.

                                Examples:
                                  - `*.cilium.io` matches exactly one subdomain of cilium at that level www.cilium.io and blog.cilium.io match, cilium.io and google.com do not.
                                  - `**.cilium.io` matches more than one subdomain of cilium, e.g. sub1.sub2.cilium.io and sub.cilium.io match, cilium.io do not.
                              maxLength: 255
                              pattern: ^(\*?\*\.)?([-a-zA-Z0-9_]+\.?)+$
                              type: string
                            minItems: 1
                            type: array
                            x-kubernetes-list-type: set
                          terminatingTLS:
                            description: |-
                              TerminatingTLS is the TLS context for the connection terminated by
                              the L7 proxy.  For egress policy this specifies the server-side TLS
                              parameters to be applied on the connections originated from the local
                              endpoint and terminated by the L7 proxy. For ingress policy this specifies
                              the server-side TLS parameters to be applied on the connections
                              originated from a remote source and terminated by the L7 proxy.
                            properties:
                              certificate:
                                description: |-
                                  Certificate is the file name or k8s secret item name for the certificate
                                  chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the
                                  item must exist.
                                type: string
                              privateKey:
                                description: |-
                                  PrivateKey is the file name or k8s secret item name for the private key
                                  matching the certificate chain. If omitted, 'tls.key' is assumed, if it
                                  exists. If given, the item must exist.
                                type: string
                              secret:
                                description: |-
                                  Secret is the secret that contains the certificates and private key for
                                  the TLS context.
                                  By default, Cilium will search in this secret for the following items:
                                   - 'ca.crt'  - Which represents the trusted CA to verify remote source.
                                   - 'tls.crt' - Which represents the public key certificate.
                                   - 'tls.key' - Which represents the private key matching the public key
                                                 certificate.
                                properties:
                                  name:
                                    description: Name is the name of the secret.
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace in which the secret exists. Context of use
                                      determines the default value if left out (e.g., "default").
                                    type: string
                                required:
                                - name
                                type: object
                              trustedCA:
                                description: |-
                                  TrustedCA is the file name or k8s secret item name for the trusted CA.
                                  If omitted, 'ca.crt' is assumed, if it exists. If given, the item must
                                  exist.
                                type: string
                            required:
                            - secret
                            type: object
                        type: object
                      type: array
                  required:
                  - matchingPeerIdentities
                  type: object
                type: array
              ingressDenyRuleIdentities:
                description: IngressDenyRuleIdentities is the list of ingress deny
                  rules that were selected from the source policy.
                items:
                  description: |-
                    CRPPeerRule defines a component of an ingress or egress rule within a parsedCRP.
                    It associates a set of peer NumericIdentities with a specific L3/L4/L7 configuration.
                  properties:
                    icmps:
                      description: |-
                        ICMPs is a list of ICMP rule identified by type number
                        which the endpoint subject to the rule is allowed to
                        receive connections on.

                        Example:
                        Any endpoint with the label "app=httpd" can only accept incoming
                        type 8 ICMP connections.
                      items:
                        description: ICMPRule is a list of ICMP fields.
                        properties:
                          fields:
                            description: Fields is a list of ICMP fields.
                            items:
                              description: ICMPField is a ICMP field.
                              properties:
                                family:
                                  default: IPv4
                                  description: |-
                                    Family is a IP address version.
                                    Currently, we support `IPv4` and `IPv6`.
                                    `IPv4` is set as default.
                                  enum:
                                  - IPv4
                                  - IPv6
                                  type: string
                                type:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: "Type is a ICMP-type.\nIt should be
                                    an 8bit code (0-255), or it's CamelCase name (for
                                    example, \"EchoReply\").\nAllowed ICMP types are:\n
                                    \   Ipv4: EchoReply | DestinationUnreachable |
                                    Redirect | Echo | EchoRequest |\n\t\t     RouterAdvertisement
                                    | RouterSelection | TimeExceeded | ParameterProblem
                                    |\n\t\t\t Timestamp | TimestampReply | Photuris
                                    | ExtendedEcho Request | ExtendedEcho Reply\n
                                    \   Ipv6: DestinationUnreachable | PacketTooBig
                                    | TimeExceeded | ParameterProblem |\n\t\t\t EchoRequest
                                    | EchoReply | MulticastListenerQuery| MulticastListenerReport
                                    |\n\t\t\t MulticastListenerDone | RouterSolicitation
                                    | RouterAdvertisement | NeighborSolicitation |\n\t\t\t
                                    NeighborAdvertisement | RedirectMessage | RouterRenumbering
                                    | ICMPNodeInformationQuery |\n\t\t\t ICMPNodeInformationResponse
                                    | InverseNeighborDiscoverySolicitation | InverseNeighborDiscoveryAdvertisement
                                    |\n\t\t\t HomeAgentAddressDiscoveryRequest | HomeAgentAddressDiscoveryReply
                                    | MobilePrefixSolicitation |\n\t\t\t MobilePrefixAdvertisement
                                    | DuplicateAddressRequestCodeSuffix | DuplicateAddressConfirmationCodeSuffix
                                    |\n\t\t\t ExtendedEchoRequest | ExtendedEchoReply"
                                  pattern: ^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]|EchoReply|DestinationUnreachable|Redirect|Echo|RouterAdvertisement|RouterSelection|TimeExceeded|ParameterProblem|Timestamp|TimestampReply|Photuris|ExtendedEchoRequest|ExtendedEcho
                                    Reply|PacketTooBig|ParameterProblem|EchoRequest|MulticastListenerQuery|MulticastListenerReport|MulticastListenerDone|RouterSolicitation|RouterAdvertisement|NeighborSolicitation|NeighborAdvertisement|RedirectMessage|RouterRenumbering|ICMPNodeInformationQuery|ICMPNodeInformationResponse|InverseNeighborDiscoverySolicitation|InverseNeighborDiscoveryAdvertisement|HomeAgentAddressDiscoveryRequest|HomeAgentAddressDiscoveryReply|MobilePrefixSolicitation|MobilePrefixAdvertisement|DuplicateAddressRequestCodeSuffix|DuplicateAddressConfirmationCodeSuffix)$
                                  x-kubernetes-int-or-string: true
                              required:
                              - type
                              type: object
                            maxItems: 40
                            type: array
                        type: object
                      type: array
                    matchingPeerIdentities:
                      description: |-
                        MatchingPeerIdentities is a set of peer NumericIdentities that are allowed
                        (for ingress) or targeted (for egress) by this part of the rule,
                        sharing the same L3/L4/L7 configuration.
                      items:
                        description: "NumericIdentity is the numeric representation
                          of a security identity.\n\nBits:\n\n\t 0-15: identity identifier\n\t16-23:
                          cluster identifier\n\t   24: LocalIdentityFlag: Indicates
                          that the identity has a local scope"
                        format: int32
                        type: integer
                      type: array
                    toPorts:
                      description: |-
                        ToPorts is a list of destination ports identified by port number and
                        protocol which the endpoint subject to the rule is allowed to
                        receive connections on.
                      items:
                        description: |-
                          PortRule is a list of ports/protocol combinations with optional Layer 7
                          rules which must be met.
                        properties:
                          listener:
                            description: |-
                              listener specifies the name of a custom Envoy listener to which this traffic should be
                              redirected to.
                            properties:
                              envoyConfig:
                                description: |-
                                  EnvoyConfig is a reference to the CEC or CCEC resource in which
                                  the listener is defined.
                                properties:
                                  kind:
                                    description: |-
                                      Kind is the resource type being referred to. Defaults to CiliumEnvoyConfig or
                                      CiliumClusterwideEnvoyConfig for CiliumNetworkPolicy and CiliumClusterwideNetworkPolicy,
                                      respectively. The only case this is currently explicitly needed is when referring to a
                                      CiliumClusterwideEnvoyConfig from CiliumNetworkPolicy, as using a namespaced listener
                                      from a cluster scoped policy is not allowed.
                                    enum:
                                    - CiliumEnvoyConfig
                                    - CiliumClusterwideEnvoyConfig
                                    type: string
                                  name:
                                    description: |-
                                      Name is the resource name of the CiliumEnvoyConfig or CiliumClusterwideEnvoyConfig where
                                      the listener is defined in.
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                type: object
                              name:
                                description: Name is the name of the listener.
                                minLength: 1
                                type: string
                              priority:
                                description: |-
                                  Priority for this Listener that is used when multiple rules would apply different
                                  listeners to a policy map entry. Behavior of this is implementation dependent.
                                maximum: 100
                                minimum: 1
                                type: integer
                            required:
                            - envoyConfig
                            - name
                            type: object
                          originatingTLS:
                            description: |-
                              OriginatingTLS is the TLS context for the connections originated by
                              the L7 proxy.  For egress policy this specifies the client-side TLS
                              parameters for the upstream connection originating from the L7 proxy
                              to the remote destination. For ingress policy this specifies the
                              client-side TLS parameters for the connection from the L7 proxy to
                              the local endpoint.
                            properties:
                              certificate:
                                description: |-
                                  Certificate is the file name or k8s secret item name for the certificate
                                  chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the
                                  item must exist.
                                type: string
                              privateKey:
                                description: |-
                                  PrivateKey is the file name or k8s secret item name for the private key
                                  matching the certificate chain. If omitted, 'tls.key' is assumed, if it
                                  exists. If given, the item must exist.
                                type: string
                              secret:
                                description: |-
                                  Secret is the secret that contains the certificates and private key for
                                  the TLS context.
                                  By default, Cilium will search in this secret for the following items:
                                   - 'ca.crt'  - Which represents the trusted CA to verify remote source.
                                   - 'tls.crt' - Which represents the public key certificate.
                                   - 'tls.key' - Which represents the private key matching the public key
                                                 certificate.
                                properties:
                                  name:
                                    description: Name is the name of the secret.
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace in which the secret exists. Context of use
                                      determines the default value if left out (e.g., "default").
                                    type: string
                                required:
                                - name
                                type: object
                              trustedCA:
                                description: |-
                                  TrustedCA is the file name or k8s secret item name for the trusted CA.
                                  If omitted, 'ca.crt' is assumed, if it exists. If given, the item must
                                  exist.
                                type: string
                            required:
                            - secret
                            type: object
                          ports:
                            description: Ports is a list of L4 port/protocol
                            items:
                              description: PortProtocol specifies an L4 port with
                                an optional transport protocol
                              properties:
                                endPort:
                                  description: EndPort can only be an L4 port number.
                                  format: int32
                                  maximum: 65535
                                  minimum: 0
                                  type: integer
                                port:
                                  description: |-
                                    Port can be an L4 port number, or a name in the form of "http"
                                    or "http-8080".
                                  pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                  type: string
                                protocol:
                                  description: |-
                                    Protocol is the L4 protocol. If omitted or empty, any protocol
                                    matches. Accepted values: "TCP", "UDP", "SCTP", "ANY"

                                    Matching on ICMP is not supported.

                                    Named port specified for a container may narrow this down, but may not
                                    contradict this.
                                  enum:
                                  - TCP
                                  - UDP
                                  - SCTP
                                  - ANY
                                  type: string
                              required:
                              - port
                              type: object
                            maxItems: 40
                            type: array
                          rules:
                            description: |-
                              Rules is a list of additional port level rules which must be met in
                              order for the PortRule to allow the traffic. If omitted or empty,
                              no layer 7 rules are enforced.
                            oneOf:
                            - properties:
                                http: {}
                              required:
                              - http
                            - properties:
                                kafka: {}
                              required:
                              - kafka
                            - properties:
                                dns: {}
                              required:
                              - dns
                            - properties:
                                l7proto: {}
                              required:
                              - l7proto
                            properties:
                              dns:
                                description: DNS-specific rules.
                                items:
                                  description: PortRuleDNS is a list of allowed DNS
                                    lookups.
                                  oneOf:
                                  - properties:
                                      matchName: {}
                                    required:
                                    - matchName
                                  - properties:
                                      matchPattern: {}
                                    required:
                                    - matchPattern
                                  properties:
                                    matchName:
                                      description: |-
                                        MatchName matches literal DNS names. A trailing "." is automatically added
                                        when missing.
                                      maxLength: 255
                                      pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                      type: string
                                    matchPattern:
                                      description: |-
                                        MatchPattern allows using wildcards to match DNS names. All wildcards are
                                        case insensitive. The wildcards are:
                                        - "*" matches 0 or more DNS valid characters, and may occur anywhere in
                                        the pattern. As a special case a "*" as the leftmost character, without a
                                        following "." matches all subdomains as well as the name to the right.
                                        A trailing "." is automatically added when missing.

                                        Examples:
                                        `*.cilium.io` matches subdomains of cilium at that level
                                          www.cilium.io and blog.cilium.io match, cilium.io and google.com do not
                                        `*cilium.io` matches cilium.io and all subdomains ends with "cilium.io"
                                          except those containing "." separator, subcilium.io and sub-cilium.io match,
                                          www.cilium.io and blog.cilium.io does not
                                        sub*.cilium.io matches subdomains of cilium where the subdomain component
                                        begins with "sub"
                                          sub.cilium.io and subdomain.cilium.io match, www.cilium.io,
                                          blog.cilium.io, cilium.io and google.com do not
                                      maxLength: 255
                                      pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                      type: string
                                  type: object
                                type: array
                              http:
                                description: HTTP specific rules.
                                items:
                                  description: |-
                                    PortRuleHTTP is a list of HTTP protocol constraints. All fields are
                                    optional, if all fields are empty or missing, the rule does not have any
                                    effect.

                                    All fields of this type are extended POSIX regex as defined by IEEE Std
                                    1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax)
                                    matched against the path of an incoming request. Currently it can contain
                                    characters disallowed from the conventional "path" part of a URL as defined
                                    by RFC 3986.
                                  properties:
                                    headerMatches:
                                      description: |-
                                        HeaderMatches is a list of HTTP headers which must be
                                        present and match against the given values. Mismatch field can be used
                                        to specify what to do when there is no match.
                                      items:
                                        description: |-
                                          HeaderMatch extends the HeaderValue for matching requirement of a
                                          named header field against an immediate string or a secret value.
                                          If none of the optional fields is present, then the
                                          header value is not matched, only presence of the header is enough.
                                        properties:
                                          mismatch:
                                            description: |-
                                              Mismatch identifies what to do in case there is no match. The default is
                                              to drop the request. Otherwise the overall rule is still considered as
                                              matching, but the mismatches are logged in the access log.
                                            enum:
                                            - LOG
                                            - ADD
                                            - DELETE
                                            - REPLACE
                                            type: string
                                          name:
                                            description: Name identifies the header.
                                            minLength: 1
                                            type: string
                                          secret:
                                            description: |-
                                              Secret refers to a secret that contains the value to be matched against.
                                              The secret must only contain one entry. If the referred secret does not
                                              exist, and there is no "Value" specified, the match will fail.
                                            properties:
                                              name:
                                                description: Name is the name of the
                                                  secret.
                                                type: string
                                              namespace:
                                                description: |-
                                                  Namespace is the namespace in which the secret exists. Context of use
                                                  determines the default value if left out (e.g., "default").
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          value:
                                            description: |-
                                              Value matches the exact value of the header. Can be specified either
                                              alone or together with "Secret"; will be used as the header value if the
                                              secret can not be found in the latter case.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    headers:
                                      description: |-
                                        Headers is a list of HTTP headers which must be present in the
                                        request. If omitted or empty, requests are allowed regardless of
                                        headers present.
                                      items:
                                        type: string
                                      type: array
                                    host:
                                      description: |-
                                        Host is an extended POSIX regex matched against the host header of a
                                        request. Examples:

                                        - foo.bar.com will match the host fooXbar.com or foo-bar.com
                                        - foo\.bar\.com will only match the host foo.bar.com

                                        If omitted or empty, the value of the host header is ignored.
                                      format: idn-hostname
                                      type: string
                                    method:
                                      description: |-
                                        Method is an extended POSIX regex matched against the method of a
                                        request, e.g. "GET", "POST", "PUT", "PATCH", "DELETE", ...

                                        If omitted or empty, all methods are allowed.
                                      type: string
                                    path:
                                      description: |-
                                        Path is an extended POSIX regex matched against the path of a
                                        request. Currently it can contain characters disallowed from the
                                        conventional "path" part of a URL as defined by RFC 3986.

                                        If omitted or empty, all paths are all allowed.
                                      type: string
                                  type: object
                                type: array
                              kafka:
                                description: Kafka-specific rules.
                                items:
                                  description: |-
                                    PortRule is a list of Kafka protocol constraints. All fields are
                                    optional, if all fields are empty or missing, the rule will match all
                                    Kafka messages.
                                  properties:
                                    apiKey:
                                      description: |-
                                        APIKey is a case-insensitive string matched against the key of a
                                        request, e.g. "produce", "fetch", "createtopic", "deletetopic", et al
                                        Reference: https://kafka.apache.org/protocol#protocol_api_keys

                                        If omitted or empty, and if Role is not specified, then all keys are allowed.
                                      type: string
                                    apiVersion:
                                      description: |-
                                        APIVersion is the version matched against the api version of the
                                        Kafka message. If set, it has to be a string representing a positive
                                        integer.

                                        If omitted or empty, all versions are allowed.
                                      type: string
                                    clientID:
                                      description: |-
                                        ClientID is the client identifier as provided in the request.

                                        From Kafka protocol documentation:
                                        This is a user supplied identifier for the client application. The
                                        user can use any identifier they like and it will be used when
                                        logging errors, monitoring aggregates, etc. For example, one might
                                        want to monitor not just the requests per second overall, but the
                                        number coming from each client application (each of which could
                                        reside on multiple servers). This id acts as a logical grouping
                                        across all requests from a particular client.

                                        If omitted or empty, all client identifiers are allowed.
                                      type: string
                                    role:
                                      description: |-
                                        Role is a case-insensitive string and describes a group of API keys
                                        necessary to perform certain higher-level Kafka operations such as "produce"
                                        or "consume". A Role automatically expands into all APIKeys required
                                        to perform the specified higher-level operation.

                                        The following values are supported:
                                         - "produce": Allow producing to the topics specified in the rule
                                         - "consume": Allow consuming from the topics specified in the rule

                                        This field is incompatible with the APIKey field, i.e APIKey and Role
                                        cannot both be specified in the same rule.

                                        If omitted or empty, and if APIKey is not specified, then all keys are
                                        allowed.
                                      enum:
                                      - produce
                                      - consume
                                      type: string
                                    topic:
                                      description: |-
                                        Topic is the topic name contained in the message. If a Kafka request
                                        contains multiple topics, then all topics must be allowed or the
                                        message will be rejected.

                                        This constraint is ignored if the matched request message type
                                        doesn't contain any topic. Maximum size of Topic can be 249
                                        characters as per recent Kafka spec and allowed characters are
                                        a-z, A-Z, 0-9, -, . and _.

                                        Older Kafka versions had longer topic lengths of 255, but in Kafka 0.10
                                        version the length was changed from 255 to 249. For compatibility
                                        reasons we are using 255.

                                        If omitted or empty, all topics are allowed.
                                      maxLength: 255
                                      type: string
                                  type: object
                                type: array
                              l7:
                                description: Key-value pair rules.
                                items:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    PortRuleL7 is a list of key-value pairs interpreted by a L7 protocol as
                                    protocol constraints. All fields are optional, if all fields are empty or
                                    missing, the rule does not have any effect.
                                  type: object
                                type: array
                              l7proto:
                                description: Name of the L7 protocol for which the
                                  Key-value pair rules apply.
                                type: string
                            type: object
                          serverNames:
                            description: |-
                              ServerNames is a list of allowed TLS SNI values. If not empty, then
                              TLS must be present and one of the provided SNIs must be indicated in the
                              TLS handshake.
                            items:
                              description: |-
                                ServerName allows using prefix only wildcards to match DNS names.

                                - "*" matches 0 or more DNS valid characters, and may only occur at the
                                beginning of the pattern. As a special case a "*" as the leftmost character,
                                without a following "." matches all subdomains as well as the name to the right.

                                Examples:
                                  - `*.cilium.io` matches exactly one subdomain of cilium at that level www.cilium.io and blog.cilium.io match, cilium.io and google.com do not.
                                  - `**.cilium.io` matches more than one subdomain of cilium, e.g. sub1.sub2.cilium.io and sub.cilium.io match, cilium.io do not.
                              maxLength: 255
                              pattern: ^(\*?\*\.)?([-a-zA-Z0-9_]+\.?)+$
                              type: string
                            minItems: 1
                            type: array
                            x-kubernetes-list-type: set
                          terminatingTLS:
                            description: |-
                              TerminatingTLS is the TLS context for the connection terminated by
                              the L7 proxy.  For egress policy this specifies the server-side TLS
                              parameters to be applied on the connections originated from the local
                              endpoint and terminated by the L7 proxy. For ingress policy this specifies
                              the server-side TLS parameters to be applied on the connections
                              originated from a remote source and terminated by the L7 proxy.
                            properties:
                              certificate:
                                description: |-
                                  Certificate is the file name or k8s secret item name for the certificate
                                  chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the
                                  item must exist.
                                type: string
                              privateKey:
                                description: |-
                                  PrivateKey is the file name or k8s secret item name for the private key
                                  matching the certificate chain. If omitted, 'tls.key' is assumed, if it
                                  exists. If given, the item must exist.
                                type: string
                              secret:
                                description: |-
                                  Secret is the secret that contains the certificates and private key for
                                  the TLS context.
                                  By default, Cilium will search in this secret for the following items:
                                   - 'ca.crt'  - Which represents the trusted CA to verify remote source.
                                   - 'tls.crt' - Which represents the public key certificate.
                                   - 'tls.key' - Which represents the private key matching the public key
                                                 certificate.
                                properties:
                                  name:
                                    description: Name is the name of the secret.
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace in which the secret exists. Context of use
                                      determines the default value if left out (e.g., "default").
                                    type: string
                                required:
                                - name
                                type: object
                              trustedCA:
                                description: |-
                                  TrustedCA is the file name or k8s secret item name for the trusted CA.
                                  If omitted, 'ca.crt' is assumed, if it exists. If given, the item must
                                  exist.
                                type: string
                            required:
                            - secret
                            type: object
                        type: object
                      type: array
                  required:
                  - matchingPeerIdentities
                  type: object
                type: array
              ingressRuleIdentities:
                description: |-
                  Ingress rule identities is the list of ingress rules that were selected from the source policy.
                  It can be empty if no ingress rules were selected.
                items:
                  description: |-
                    CRPPeerRule defines a component of an ingress or egress rule within a parsedCRP.
                    It associates a set of peer NumericIdentities with a specific L3/L4/L7 configuration.
                  properties:
                    icmps:
                      description: |-
                        ICMPs is a list of ICMP rule identified by type number
                        which the endpoint subject to the rule is allowed to
                        receive connections on.

                        Example:
                        Any endpoint with the label "app=httpd" can only accept incoming
                        type 8 ICMP connections.
                      items:
                        description: ICMPRule is a list of ICMP fields.
                        properties:
                          fields:
                            description: Fields is a list of ICMP fields.
                            items:
                              description: ICMPField is a ICMP field.
                              properties:
                                family:
                                  default: IPv4
                                  description: |-
                                    Family is a IP address version.
                                    Currently, we support `IPv4` and `IPv6`.
                                    `IPv4` is set as default.
                                  enum:
                                  - IPv4
                                  - IPv6
                                  type: string
                                type:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: "Type is a ICMP-type.\nIt should be
                                    an 8bit code (0-255), or it's CamelCase name (for
                                    example, \"EchoReply\").\nAllowed ICMP types are:\n
                                    \   Ipv4: EchoReply | DestinationUnreachable |
                                    Redirect | Echo | EchoRequest |\n\t\t     RouterAdvertisement
                                    | RouterSelection | TimeExceeded | ParameterProblem
                                    |\n\t\t\t Timestamp | TimestampReply | Photuris
                                    | ExtendedEcho Request | ExtendedEcho Reply\n
                                    \   Ipv6: DestinationUnreachable | PacketTooBig
                                    | TimeExceeded | ParameterProblem |\n\t\t\t EchoRequest
                                    | EchoReply | MulticastListenerQuery| MulticastListenerReport
                                    |\n\t\t\t MulticastListenerDone | RouterSolicitation
                                    | RouterAdvertisement | NeighborSolicitation |\n\t\t\t
                                    NeighborAdvertisement | RedirectMessage | RouterRenumbering
                                    | ICMPNodeInformationQuery |\n\t\t\t ICMPNodeInformationResponse
                                    | InverseNeighborDiscoverySolicitation | InverseNeighborDiscoveryAdvertisement
                                    |\n\t\t\t HomeAgentAddressDiscoveryRequest | HomeAgentAddressDiscoveryReply
                                    | MobilePrefixSolicitation |\n\t\t\t MobilePrefixAdvertisement
                                    | DuplicateAddressRequestCodeSuffix | DuplicateAddressConfirmationCodeSuffix
                                    |\n\t\t\t ExtendedEchoRequest | ExtendedEchoReply"
                                  pattern: ^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]|EchoReply|DestinationUnreachable|Redirect|Echo|RouterAdvertisement|RouterSelection|TimeExceeded|ParameterProblem|Timestamp|TimestampReply|Photuris|ExtendedEchoRequest|ExtendedEcho
                                    Reply|PacketTooBig|ParameterProblem|EchoRequest|MulticastListenerQuery|MulticastListenerReport|MulticastListenerDone|RouterSolicitation|RouterAdvertisement|NeighborSolicitation|NeighborAdvertisement|RedirectMessage|RouterRenumbering|ICMPNodeInformationQuery|ICMPNodeInformationResponse|InverseNeighborDiscoverySolicitation|InverseNeighborDiscoveryAdvertisement|HomeAgentAddressDiscoveryRequest|HomeAgentAddressDiscoveryReply|MobilePrefixSolicitation|MobilePrefixAdvertisement|DuplicateAddressRequestCodeSuffix|DuplicateAddressConfirmationCodeSuffix)$
                                  x-kubernetes-int-or-string: true
                              required:
                              - type
                              type: object
                            maxItems: 40
                            type: array
                        type: object
                      type: array
                    matchingPeerIdentities:
                      description: |-
                        MatchingPeerIdentities is a set of peer NumericIdentities that are allowed
                        (for ingress) or targeted (for egress) by this part of the rule,
                        sharing the same L3/L4/L7 configuration.
                      items:
                        description: "NumericIdentity is the numeric representation
                          of a security identity.\n\nBits:\n\n\t 0-15: identity identifier\n\t16-23:
                          cluster identifier\n\t   24: LocalIdentityFlag: Indicates
                          that the identity has a local scope"
                        format: int32
                        type: integer
                      type: array
                    toPorts:
                      description: |-
                        ToPorts is a list of destination ports identified by port number and
                        protocol which the endpoint subject to the rule is allowed to
                        receive connections on.
                      items:
                        description: |-
                          PortRule is a list of ports/protocol combinations with optional Layer 7
                          rules which must be met.
                        properties:
                          listener:
                            description: |-
                              listener specifies the name of a custom Envoy listener to which this traffic should be
                              redirected to.
                            properties:
                              envoyConfig:
                                description: |-
                                  EnvoyConfig is a reference to the CEC or CCEC resource in which
                                  the listener is defined.
                                properties:
                                  kind:
                                    description: |-
                                      Kind is the resource type being referred to. Defaults to CiliumEnvoyConfig or
                                      CiliumClusterwideEnvoyConfig for CiliumNetworkPolicy and CiliumClusterwideNetworkPolicy,
                                      respectively. The only case this is currently explicitly needed is when referring to a
                                      CiliumClusterwideEnvoyConfig from CiliumNetworkPolicy, as using a namespaced listener
                                      from a cluster scoped policy is not allowed.
                                    enum:
                                    - CiliumEnvoyConfig
                                    - CiliumClusterwideEnvoyConfig
                                    type: string
                                  name:
                                    description: |-
                                      Name is the resource name of the CiliumEnvoyConfig or CiliumClusterwideEnvoyConfig where
                                      the listener is defined in.
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                type: object
                              name:
                                description: Name is the name of the listener.
                                minLength: 1
                                type: string
                              priority:
                                description: |-
                                  Priority for this Listener that is used when multiple rules would apply different
                                  listeners to a policy map entry. Behavior of this is implementation dependent.
                                maximum: 100
                                minimum: 1
                                type: integer
                            required:
                            - envoyConfig
                            - name
                            type: object
                          originatingTLS:
                            description: |-
                              OriginatingTLS is the TLS context for the connections originated by
                              the L7 proxy.  For egress policy this specifies the client-side TLS
                              parameters for the upstream connection originating from the L7 proxy
                              to the remote destination. For ingress policy this specifies the
                              client-side TLS parameters for the connection from the L7 proxy to
                              the local endpoint.
                            properties:
                              certificate:
                                description: |-
                                  Certificate is the file name or k8s secret item name for the certificate
                                  chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the
                                  item must exist.
                                type: string
                              privateKey:
                                description: |-
                                  PrivateKey is the file name or k8s secret item name for the private key
                                  matching the certificate chain. If omitted, 'tls.key' is assumed, if it
                                  exists. If given, the item must exist.
                                type: string
                              secret:
                                description: |-
                                  Secret is the secret that contains the certificates and private key for
                                  the TLS context.
                                  By default, Cilium will search in this secret for the following items:
                                   - 'ca.crt'  - Which represents the trusted CA to verify remote source.
                                   - 'tls.crt' - Which represents the public key certificate.
                                   - 'tls.key' - Which represents the private key matching the public key
                                                 certificate.
                                properties:
                                  name:
                                    description: Name is the name of the secret.
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace in which the secret exists. Context of use
                                      determines the default value if left out (e.g., "default").
                                    type: string
                                required:
                                - name
                                type: object
                              trustedCA:
                                description: |-
                                  TrustedCA is the file name or k8s secret item name for the trusted CA.
                                  If omitted, 'ca.crt' is assumed, if it exists. If given, the item must
                                  exist.
                                type: string
                            required:
                            - secret
                            type: object
                          ports:
                            description: Ports is a list of L4 port/protocol
                            items:
                              description: PortProtocol specifies an L4 port with
                                an optional transport protocol
                              properties:
                                endPort:
                                  description: EndPort can only be an L4 port number.
                                  format: int32
                                  maximum: 65535
                                  minimum: 0
                                  type: integer
                                port:
                                  description: |-
                                    Port can be an L4 port number, or a name in the form of "http"
                                    or "http-8080".
                                  pattern: ^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[0-9]{1,4})|([a-zA-Z0-9]-?)*[a-zA-Z](-?[a-zA-Z0-9])*$
                                  type: string
                                protocol:
                                  description: |-
                                    Protocol is the L4 protocol. If omitted or empty, any protocol
                                    matches. Accepted values: "TCP", "UDP", "SCTP", "ANY"

                                    Matching on ICMP is not supported.

                                    Named port specified for a container may narrow this down, but may not
                                    contradict this.
                                  enum:
                                  - TCP
                                  - UDP
                                  - SCTP
                                  - ANY
                                  type: string
                              required:
                              - port
                              type: object
                            maxItems: 40
                            type: array
                          rules:
                            description: |-
                              Rules is a list of additional port level rules which must be met in
                              order for the PortRule to allow the traffic. If omitted or empty,
                              no layer 7 rules are enforced.
                            oneOf:
                            - properties:
                                http: {}
                              required:
                              - http
                            - properties:
                                kafka: {}
                              required:
                              - kafka
                            - properties:
                                dns: {}
                              required:
                              - dns
                            - properties:
                                l7proto: {}
                              required:
                              - l7proto
                            properties:
                              dns:
                                description: DNS-specific rules.
                                items:
                                  description: PortRuleDNS is a list of allowed DNS
                                    lookups.
                                  oneOf:
                                  - properties:
                                      matchName: {}
                                    required:
                                    - matchName
                                  - properties:
                                      matchPattern: {}
                                    required:
                                    - matchPattern
                                  properties:
                                    matchName:
                                      description: |-
                                        MatchName matches literal DNS names. A trailing "." is automatically added
                                        when missing.
                                      maxLength: 255
                                      pattern: ^([-a-zA-Z0-9_]+[.]?)+$
                                      type: string
                                    matchPattern:
                                      description: |-
                                        MatchPattern allows using wildcards to match DNS names. All wildcards are
                                        case insensitive. The wildcards are:
                                        - "*" matches 0 or more DNS valid characters, and may occur anywhere in
                                        the pattern. As a special case a "*" as the leftmost character, without a
                                        following "." matches all subdomains as well as the name to the right.
                                        A trailing "." is automatically added when missing.

                                        Examples:
                                        `*.cilium.io` matches subdomains of cilium at that level
                                          www.cilium.io and blog.cilium.io match, cilium.io and google.com do not
                                        `*cilium.io` matches cilium.io and all subdomains ends with "cilium.io"
                                          except those containing "." separator, subcilium.io and sub-cilium.io match,
                                          www.cilium.io and blog.cilium.io does not
                                        sub*.cilium.io matches subdomains of cilium where the subdomain component
                                        begins with "sub"
                                          sub.cilium.io and subdomain.cilium.io match, www.cilium.io,
                                          blog.cilium.io, cilium.io and google.com do not
                                      maxLength: 255
                                      pattern: ^([-a-zA-Z0-9_*]+[.]?)+$
                                      type: string
                                  type: object
                                type: array
                              http:
                                description: HTTP specific rules.
                                items:
                                  description: |-
                                    PortRuleHTTP is a list of HTTP protocol constraints. All fields are
                                    optional, if all fields are empty or missing, the rule does not have any
                                    effect.

                                    All fields of this type are extended POSIX regex as defined by IEEE Std
                                    1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax)
                                    matched against the path of an incoming request. Currently it can contain
                                    characters disallowed from the conventional "path" part of a URL as defined
                                    by RFC 3986.
                                  properties:
                                    headerMatches:
                                      description: |-
                                        HeaderMatches is a list of HTTP headers which must be
                                        present and match against the given values. Mismatch field can be used
                                        to specify what to do when there is no match.
                                      items:
                                        description: |-
                                          HeaderMatch extends the HeaderValue for matching requirement of a
                                          named header field against an immediate string or a secret value.
                                          If none of the optional fields is present, then the
                                          header value is not matched, only presence of the header is enough.
                                        properties:
                                          mismatch:
                                            description: |-
                                              Mismatch identifies what to do in case there is no match. The default is
                                              to drop the request. Otherwise the overall rule is still considered as
                                              matching, but the mismatches are logged in the access log.
                                            enum:
                                            - LOG
                                            - ADD
                                            - DELETE
                                            - REPLACE
                                            type: string
                                          name:
                                            description: Name identifies the header.
                                            minLength: 1
                                            type: string
                                          secret:
                                            description: |-
                                              Secret refers to a secret that contains the value to be matched against.
                                              The secret must only contain one entry. If the referred secret does not
                                              exist, and there is no "Value" specified, the match will fail.
                                            properties:
                                              name:
                                                description: Name is the name of the
                                                  secret.
                                                type: string
                                              namespace:
                                                description: |-
                                                  Namespace is the namespace in which the secret exists. Context of use
                                                  determines the default value if left out (e.g., "default").
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          value:
                                            description: |-
                                              Value matches the exact value of the header. Can be specified either
                                              alone or together with "Secret"; will be used as the header value if the
                                              secret can not be found in the latter case.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    headers:
                                      description: |-
                                        Headers is a list of HTTP headers which must be present in the
                                        request. If omitted or empty, requests are allowed regardless of
                                        headers present.
                                      items:
                                        type: string
                                      type: array
                                    host:
                                      description: |-
                                        Host is an extended POSIX regex matched against the host header of a
                                        request. Examples:

                                        - foo.bar.com will match the host fooXbar.com or foo-bar.com
                                        - foo\.bar\.com will only match the host foo.bar.com

                                        If omitted or empty, the value of the host header is ignored.
                                      format: idn-hostname
                                      type: string
                                    method:
                                      description: |-
                                        Method is an extended POSIX regex matched against the method of a
                                        request, e.g. "GET", "POST", "PUT", "PATCH", "DELETE", ...

                                        If omitted or empty, all methods are allowed.
                                      type: string
                                    path:
                                      description: |-
                                        Path is an extended POSIX regex matched against the path of a
                                        request. Currently it can contain characters disallowed from the
                                        conventional "path" part of a URL as defined by RFC 3986.

                                        If omitted or empty, all paths are all allowed.
                                      type: string
                                  type: object
                                type: array
                              kafka:
                                description: Kafka-specific rules.
                                items:
                                  description: |-
                                    PortRule is a list of Kafka protocol constraints. All fields are
                                    optional, if all fields are empty or missing, the rule will match all
                                    Kafka messages.
                                  properties:
                                    apiKey:
                                      description: |-
                                        APIKey is a case-insensitive string matched against the key of a
                                        request, e.g. "produce", "fetch", "createtopic", "deletetopic", et al
                                        Reference: https://kafka.apache.org/protocol#protocol_api_keys

                                        If omitted or empty, and if Role is not specified, then all keys are allowed.
                                      type: string
                                    apiVersion:
                                      description: |-
                                        APIVersion is the version matched against the api version of the
                                        Kafka message. If set, it has to be a string representing a positive
                                        integer.

                                        If omitted or empty, all versions are allowed.
                                      type: string
                                    clientID:
                                      description: |-
                                        ClientID is the client identifier as provided in the request.

                                        From Kafka protocol documentation:
                                        This is a user supplied identifier for the client application. The
                                        user can use any identifier they like and it will be used when
                                        logging errors, monitoring aggregates, etc. For example, one might
                                        want to monitor not just the requests per second overall, but the
                                        number coming from each client application (each of which could
                                        reside on multiple servers). This id acts as a logical grouping
                                        across all requests from a particular client.

                                        If omitted or empty, all client identifiers are allowed.
                                      type: string
                                    role:
                                      description: |-
                                        Role is a case-insensitive string and describes a group of API keys
                                        necessary to perform certain higher-level Kafka operations such as "produce"
                                        or "consume". A Role automatically expands into all APIKeys required
                                        to perform the specified higher-level operation.

                                        The following values are supported:
                                         - "produce": Allow producing to the topics specified in the rule
                                         - "consume": Allow consuming from the topics specified in the rule

                                        This field is incompatible with the APIKey field, i.e APIKey and Role
                                        cannot both be specified in the same rule.

                                        If omitted or empty, and if APIKey is not specified, then all keys are
                                        allowed.
                                      enum:
                                      - produce
                                      - consume
                                      type: string
                                    topic:
                                      description: |-
                                        Topic is the topic name contained in the message. If a Kafka request
                                        contains multiple topics, then all topics must be allowed or the
                                        message will be rejected.

                                        This constraint is ignored if the matched request message type
                                        doesn't contain any topic. Maximum size of Topic can be 249
                                        characters as per recent Kafka spec and allowed characters are
                                        a-z, A-Z, 0-9, -, . and _.

                                        Older Kafka versions had longer topic lengths of 255, but in Kafka 0.10
                                        version the length was changed from 255 to 249. For compatibility
                                        reasons we are using 255.

                                        If omitted or empty, all topics are allowed.
                                      maxLength: 255
                                      type: string
                                  type: object
                                type: array
                              l7:
                                description: Key-value pair rules.
                                items:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    PortRuleL7 is a list of key-value pairs interpreted by a L7 protocol as
                                    protocol constraints. All fields are optional, if all fields are empty or
                                    missing, the rule does not have any effect.
                                  type: object
                                type: array
                              l7proto:
                                description: Name of the L7 protocol for which the
                                  Key-value pair rules apply.
                                type: string
                            type: object
                          serverNames:
                            description: |-
                              ServerNames is a list of allowed TLS SNI values. If not empty, then
                              TLS must be present and one of the provided SNIs must be indicated in the
                              TLS handshake.
                            items:
                              description: |-
                                ServerName allows using prefix only wildcards to match DNS names.

                                - "*" matches 0 or more DNS valid characters, and may only occur at the
                                beginning of the pattern. As a special case a "*" as the leftmost character,
                                without a following "." matches all subdomains as well as the name to the right.

                                Examples:
                                  - `*.cilium.io` matches exactly one subdomain of cilium at that level www.cilium.io and blog.cilium.io match, cilium.io and google.com do not.
                                  - `**.cilium.io` matches more than one subdomain of cilium, e.g. sub1.sub2.cilium.io and sub.cilium.io match, cilium.io do not.
                              maxLength: 255
                              pattern: ^(\*?\*\.)?([-a-zA-Z0-9_]+\.?)+$
                              type: string
                            minItems: 1
                            type: array
                            x-kubernetes-list-type: set
                          terminatingTLS:
                            description: |-
                              TerminatingTLS is the TLS context for the connection terminated by
                              the L7 proxy.  For egress policy this specifies the server-side TLS
                              parameters to be applied on the connections originated from the local
                              endpoint and terminated by the L7 proxy. For ingress policy this specifies
                              the server-side TLS parameters to be applied on the connections
                              originated from a remote source and terminated by the L7 proxy.
                            properties:
                              certificate:
                                description: |-
                                  Certificate is the file name or k8s secret item name for the certificate
                                  chain. If omitted, 'tls.crt' is assumed, if it exists. If given, the
                                  item must exist.
                                type: string
                              privateKey:
                                description: |-
                                  PrivateKey is the file name or k8s secret item name for the private key
                                  matching the certificate chain. If omitted, 'tls.key' is assumed, if it
                                  exists. If given, the item must exist.
                                type: string
                              secret:
                                description: |-
                                  Secret is the secret that contains the certificates and private key for
                                  the TLS context.
                                  By default, Cilium will search in this secret for the following items:
                                   - 'ca.crt'  - Which represents the trusted CA to verify remote source.
                                   - 'tls.crt' - Which represents the public key certificate.
                                   - 'tls.key' - Which represents the private key matching the public key
                                                 certificate.
                                properties:
                                  name:
                                    description: Name is the name of the secret.
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace in which the secret exists. Context of use
                                      determines the default value if left out (e.g., "default").
                                    type: string
                                required:
                                - name
                                type: object
                              trustedCA:
                                description: |-
                                  TrustedCA is the file name or k8s secret item name for the trusted CA.
                                  If omitted, 'ca.crt' is assumed, if it exists. If given, the item must
                                  exist.
                                type: string
                            required:
                            - secret
                            type: object
                        type: object
                      type: array
                  required:
                  - matchingPeerIdentities
                  type: object
                type: array
              policyRef:
                description: PolicyRef is a reference to source policy which was resolved
                properties:
                  name:
                    description: Name is the name of the policy
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the policy
                      For CCNP this will be empty as it's cluster-scoped
                    type: string
                  type:
                    description: |-
                      Type is the type of the policy
                      CNP: CiliumNetworkPolicy
                      CCNP: CiliumClusterwideNetworkPolicy
                      KNP: Kubernetes NetworkPolicy
                    enum:
                    - CNP
                    - CCNP
                    - KNP
                    type: string
                  uid:
                    description: UID is the UID of the source policy
                    type: string
                required:
                - name
                - namespace
                - type
                type: object
              subjectIdentities:
                description: |-
                  Identities is the list of identities that match the selector.
                  This list can be empty if the selector does not match any identities.
                items:
                  description: "NumericIdentity is the numeric representation of a
                    security identity.\n\nBits:\n\n\t 0-15: identity identifier\n\t16-23:
                    cluster identifier\n\t   24: LocalIdentityFlag: Indicates that
                    the identity has a local scope"
                  format: int32
                  type: integer
                type: array
            required:
            - egressRuleIdentities
            - ingressRuleIdentities
            - policyRef
            type: object
          status:
            description: Status is the status of the CiliumResolvedPolicy
            properties:
              processed:
                description: Processed indicates whether the policy has been processed
                  by the central controller
                type: boolean
              processingTime:
                description: ProcessingTime is the timestamp when the policy was processed
                format: date-time
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
